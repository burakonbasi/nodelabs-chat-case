version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nodelabs-chat-app
    restart: always
    env_file: .env.production
    ports:
      - "3000:3000"
    depends_on:
      - mongodb
      - redis
      - rabbitmq
    networks:
      - nodelabs-network
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  mongodb:
    image: mongo:7
    container_name: nodelabs-mongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: nodelabs-chat
    networks:
      - nodelabs-network

  redis:
    image: redis:7-alpine
    container_name: nodelabs-redis
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - nodelabs-network

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: nodelabs-rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - nodelabs-network

volumes:
  mongodb_data:
  redis_data:
  rabbitmq_data:

networks:
  nodelabs-network:
    driver: bridge